FFT=function(){function u(b,c){this.bufferSize=b;this.sampleRate=c;this.bandwidth=2/b*c/2;this.spectrum=new Float64Array(b/2);this.real=new Float64Array(b);this.imag=new Float64Array(b);this.peak=this.peakBand=0;this.getBandFrequency=function(b){return this.bandwidth*b+this.bandwidth/2};this.calculateSpectrum=function(){for(var c=this.spectrum,f=this.real,n=this.imag,h=2/this.bufferSize,g=Math.sqrt,e,a,d=0,k=b/2;d<k;d++)e=f[d],a=n[d],e=h*g(e*e+a*a),e>this.peak&&(this.peakBand=d,this.peak=e),c[d]=
e}}function t(b,c){u.call(this,b,c);this.reverseTable=new Uint32Array(b);c=1;for(var l=b>>1,f;c<b;){for(f=0;f<c;f++)this.reverseTable[f+c]=this.reverseTable[f]+l;c<<=1;l>>=1}this.sinTable=new Float64Array(b);this.cosTable=new Float64Array(b);for(f=0;f<b;f++)this.sinTable[f]=Math.sin(-Math.PI/f),this.cosTable[f]=Math.cos(-Math.PI/f)}t.prototype.forward=function(b){var c=this.bufferSize,l=this.cosTable,f=this.sinTable,n=this.reverseTable,h=this.real,g=this.imag;if(Math.pow(2,Math.floor(Math.log(c)/
Math.LN2))!==c)throw"Invalid buffer size, must be a power of 2.";if(c!==b.length)throw"Supplied buffer is not the same size as defined FFT. FFT Size: "+c+" Buffer Size: "+b.length;var e=1,a,d;for(d=0;d<c;d++)h[d]=b[n[d]],g[d]=0;for(;e<c;){b=l[e];n=f[e];var k=1;for(var p=a=0;p<e;p++){for(d=p;d<c;){var m=d+e;var q=k*h[m]-a*g[m];var r=k*g[m]+a*h[m];h[m]=h[d]-q;g[m]=g[d]-r;h[d]+=q;g[d]+=r;d+=e<<1}d=k;k=d*b-a*n;a=d*n+a*b}e<<=1}return this.calculateSpectrum()};t.prototype.inverse=function(b,c){var l=this.bufferSize,
f=this.cosTable,n=this.sinTable,h=this.reverseTable;b=b||this.real;c=c||this.imag;var g=1,e,a;for(a=0;a<l;a++)c[a]*=-1;var d=new Float64Array(l);var k=new Float64Array(l);for(a=0;a<b.length;a++)d[a]=b[h[a]],k[a]=c[h[a]];b=d;for(c=k;g<l;){h=f[g];d=n[g];k=1;for(var p=e=0;p<g;p++){for(a=p;a<l;){var m=a+g;var q=k*b[m]-e*c[m];var r=k*c[m]+e*b[m];b[m]=b[a]-q;c[m]=c[a]-r;b[a]+=q;c[a]+=r;a+=g<<1}a=k;k=a*h-e*d;e=a*d+e*h}g<<=1}c=new Float64Array(l);for(a=0;a<l;a++)c[a]=b[a]/l;return c};return t}();
